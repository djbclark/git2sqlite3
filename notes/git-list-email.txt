http://marc.info/?a=142128783800002&r=1&w=2

== Bulk dump of git metadata / getting git metadata into a database 

There is git repo HAPPY and and a separate git repo with branch SAD.

Repo HAPPY is canonical; branch SAD is in a separate fork repo. Files
from HAPPY have been copied over on an irregular basis to SAD. So SAD
has a mixture of files that are exactly the same as (the one in some
commit to) HAPPY, and files that have diverged since the initial copy
over from HAPPY as per the needs of the SAD fork.

The end goal is to get a diff that shows only fork-specific changes.
Identify the common file ancestor, and then diff the most recent
fork'ed file against that. Or put another way:

(a) Remove any files from SAD's most recent commit that are exactly
the same as any commit to HAPPY.

(b) For each file still in SAD's most recent commit, walk backwards in
SAD until a version is found that exists in HAPPY.

